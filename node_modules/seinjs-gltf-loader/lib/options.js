"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var loaderUtils = require("loader-utils");
var DEFAULT_OPTIONS = {
    publicPath: '/',
    compress: {
        enabled: false,
        excludes: [],
        quantization: {}
    },
    compressTextures: {
        enabled: false,
        quality: 'medium',
        astc: {
            enabled: true,
            formatOpaque: null,
            formatTransparent: null,
            quality: null,
            excludes: []
        },
        pvrtc: {
            enabled: true,
            formatOpaque: null,
            formatTransparent: null,
            quality: null,
            excludes: []
        },
        etc: {
            enabled: false,
            formatOpaque: null,
            formatTransparent: null,
            quality: null,
            excludes: []
        },
        s3tc: {
            enabled: false,
            formatOpaque: null,
            formatTransparent: null,
            quality: null,
            excludes: []
        },
        fallback: {
            useRGBA4444: true,
            useRGB565: true,
            excludes: []
        },
        excludes: []
    },
    base64: {
        enabled: false,
        threshold: 1000,
        includeGlTF: false,
        excludes: []
    },
    glb: {
        enabled: false,
        excludes: []
    },
    process: {
        enabled: false,
        processors: []
    },
    publish: {
        enabled: false,
        excludes: [],
        publisher: null
    }
};
function getOptions(context) {
    var options = loaderUtils.getOptions(context) || {};
    options.compressTextures = options.compressTextures || {};
    return {
        publicPath: options.publicPath || context._compiler.options.output.publicPath || DEFAULT_OPTIONS.publicPath,
        compress: __assign({}, DEFAULT_OPTIONS.compress, (options.compress || {})),
        compressTextures: __assign({}, DEFAULT_OPTIONS.compressTextures, (options.compressTextures || {}), {
            astc: __assign({}, DEFAULT_OPTIONS.compressTextures.astc, (options.compressTextures.astc || {})),
            pvrtc: __assign({}, DEFAULT_OPTIONS.compressTextures.pvrtc, (options.compressTextures.pvrtc || {})),
            fallback: __assign({}, DEFAULT_OPTIONS.compressTextures.fallback, (options.compressTextures.fallback || {}))
        }),
        base64: __assign({}, DEFAULT_OPTIONS.base64, (options.base64 || {})),
        glb: __assign({}, DEFAULT_OPTIONS.glb, (options.glb || {})),
        process: __assign({}, DEFAULT_OPTIONS.process, (options.process || {})),
        publish: __assign({}, DEFAULT_OPTIONS.publish, (options.publish || {}))
    };
}
exports.getOptions = getOptions;
